--- REGISTRADORES ---

Accumulador (A):
O registrador de acumulador (A) é usado para realizar operações aritméticas e lógicas. Ele é o registrador principal para realizar cálculos e armazenar resultados.

Registrador de Índice X:
O registrador de índice X é usado para endereçamento de memória. Pode ser usado como um contador de loop em instruções de repetição.

Registrador de Índice Y:
O registrador de índice Y é semelhante ao registrador de índice X e também é usado para endereçamento de memória e cálculos.

Registrador de Status (P):
O registrador de status armazena informações sobre o estado atual do processador. Ele inclui sinalizadores que indicam coisas como a ocorrência de um overflow, um resultado negativo ou zero, entre outros.

Registrador Stack Pointer (SP):
O registrador de ponteiro de pilha (SP) é usado para rastrear a posição da pilha na memória. As operações de empilhamento (push) e desempilhamento (pull) usam o SP para atualizar a posição da pilha.

Registrador de Program Counter (PC):
O registrador de contador de programa (PC) mantém o endereço da próxima instrução a ser executada. Quando uma instrução é concluída, o PC é incrementado para apontar para a próxima instrução na memória.

--- FLAGS ---
Operação: A + M + C -> A, C

A: Valor atual no acumulador.
M: Valor lido da memória (ou valor imediato).
C: Carry flag (bit de carry).
Flags Afetadas:

N (Negative Flag): Define o bit N se o resultado da soma for negativo. Isso ocorre quando o bit mais significativo do resultado é 1.
Z (Zero Flag): Define o bit Z se o resultado da soma for igual a zero.
C (Carry Flag): Define o bit C se ocorrer um carry a partir do bit mais significativo durante a operação de adição. Isso ocorre quando a soma dos valores ultrapassa 255 (em decimal) em uma operação de 8 bits.
I (Interrupt Disable Flag): Não é afetada pela operação ADC.
D (Decimal Mode Flag): Não é afetada pela operação ADC.
V (Overflow Flag): Define o bit V se ocorrer um overflow durante a operação de adição. Isso ocorre quando o resultado é maior que 127 ou menor que -128 em representação com sinal de 8 bits.


--- MODOS DE ENDEREÇAMENTOS ---

O 6502 possui vários modos de endereçamento que determinam como os operandos (dados) são fornecidos para as instruções. Cada modo de endereçamento afeta como o microprocessador busca os dados, calcula os endereços e executa a instrução. Vou explicar brevemente alguns dos modos de endereçamento mais comuns do 6502:

1. **Imediato (Immediate)**:
   - Neste modo, o valor do operando é especificado diretamente na instrução.
   - Exemplo: `LDA #10` carrega o valor 10 no acumulador.

2. **Absoluto (Absolute)**:
   - A instrução contém um endereço absoluto de 16 bits para o operando.
   - Exemplo: `LDA $2000` carrega o valor na memória do endereço $2000 no acumulador.

3. **Indireto (Indirect)**:
   - A instrução contém um endereço que aponta para um outro endereço de 16 bits na memória, cujo valor é o endereço do operando.
   - Exemplo: `LDA ($2000)` carrega o valor na memória do endereço contido em $2000 no acumulador.

4. **Índice Indireto (Indexed Indirect)**:
   - Similar ao modo indireto, mas usa um registro de índice (como X ou Y) para calcular o endereço.
   - Exemplo: `LDA ($10,X)` usa o valor de X para calcular um endereço na memória e carrega o valor contido nesse endereço no acumulador.

5. **Indireto Indexado (Indirect Indexed)**:
   - Este modo é o oposto do anterior, usando um registro de índice para calcular um endereço no operando.
   - Exemplo: `LDA ($10),Y` carrega o valor na memória do endereço contido em $10, somando o valor de Y, e coloca o resultado no acumulador.

6. **Zero Page (Página Zero)**:
   - Os operandos são endereçados em uma página zero da memória, que é uma região especial com endereços de 8 bits.
   - Exemplo: `LDA $FF` carrega o valor na memória do endereço $00FF no acumulador.

7. **Relativo (Relative)**:
   - Este modo é usado para instruções de desvio condicional e contém um deslocamento (offset) de 8 bits, que é adicionado ao contador de programa para calcular o destino do desvio.
   - Exemplo: `BEQ $10` faz um salto condicional para a posição atual + 16 bytes se a flag zero estiver definida.

Estes são apenas alguns dos modos de endereçamento disponíveis no 6502. Cada modo oferece flexibilidade para acessar e manipular dados na memória de diferentes maneiras, permitindo que o 6502 seja usado de maneira eficiente em diversas aplicações. O conhecimento dos modos de endereçamento é fundamental para programar efetivamente para o 6502 e entender como as instruções afetam a memória e o processamento.

-- PILHA DE EXECUÇÃO --
A pilha no microprocessador 6502 é uma área de memória dedicada para armazenar temporariamente dados e endereços durante a execução do programa. A pilha geralmente é implementada na memória RAM do sistema, em uma área específica conhecida como "página zero" que compreende os endereços de memória de $0100 a $01FF.


